const e=JSON.parse('{"key":"v-8fb1b68a","path":"/%E8%BF%90%E8%A1%8C%E6%97%B6%E7%8E%AF%E5%A2%83/2.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%B9%B6%E5%8F%91/(2)%E5%90%8C%E6%AD%A5.html","title":"同步（Synchronization）","lang":"zh-CN","frontmatter":{"description":"同步（Synchronization互斥锁(Mutex) Mutex 常常被用来保护那些可以被多个线程访问的共享资源，比如可以防止多个线程同时更新同一个数据时出现混乱。 条件变量(Condition Variable) 互斥锁只有两种状态，这限制了它的用途。条件变量则允许线程在阻塞的时候等待另一个线程发送的信号，当收到信号后，阻塞的线程就被唤醒并试图锁...","head":[["meta",{"property":"og:url","content":"https://PoIndex.github.io/%E8%BF%90%E8%A1%8C%E6%97%B6%E7%8E%AF%E5%A2%83/2.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%B9%B6%E5%8F%91/(2)%E5%90%8C%E6%AD%A5.html"}],["meta",{"property":"og:site_name","content":"现代黑魔法学院"}],["meta",{"property":"og:title","content":"同步（Synchronization）"}],["meta",{"property":"og:description","content":"同步（Synchronization互斥锁(Mutex) Mutex 常常被用来保护那些可以被多个线程访问的共享资源，比如可以防止多个线程同时更新同一个数据时出现混乱。 条件变量(Condition Variable) 互斥锁只有两种状态，这限制了它的用途。条件变量则允许线程在阻塞的时候等待另一个线程发送的信号，当收到信号后，阻塞的线程就被唤醒并试图锁..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T03:31:43.000Z"}],["meta",{"property":"article:author","content":"西风逍遥游"}],["meta",{"property":"article:modified_time","content":"2023-11-27T03:31:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"同步（Synchronization）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T03:31:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"西风逍遥游\\",\\"url\\":\\"https://github.com/sunxfancy\\"}]}"]]},"headers":[{"level":2,"title":"互斥锁(Mutex)","slug":"互斥锁-mutex","link":"#互斥锁-mutex","children":[]},{"level":2,"title":"条件变量(Condition Variable)","slug":"条件变量-condition-variable","link":"#条件变量-condition-variable","children":[]},{"level":2,"title":"信号量(Semaphore)","slug":"信号量-semaphore","link":"#信号量-semaphore","children":[]},{"level":2,"title":"读写锁(Read-Write Lock)","slug":"读写锁-read-write-lock","link":"#读写锁-read-write-lock","children":[]},{"level":2,"title":"自旋锁(Spinlock)","slug":"自旋锁-spinlock","link":"#自旋锁-spinlock","children":[]},{"level":2,"title":"屏障(Barrier)","slug":"屏障-barrier","link":"#屏障-barrier","children":[]}],"git":{"createdTime":1701055903000,"updatedTime":1701055903000,"contributors":[{"name":"西风逍遥游","email":"sunxfancy@gmail.com","commits":1}]},"readingTime":{"minutes":2.04,"words":612},"filePathRelative":"运行时环境/2.多线程与并发/(2)同步.md","localizedDate":"2023年11月27日","autoDesc":true}');export{e as data};
