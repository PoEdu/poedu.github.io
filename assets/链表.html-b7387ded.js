import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{o as r,c as n,d as e,e as t}from"./app-7fdc7960.js";const s={},a=e("h1",{id:"链表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表","aria-hidden":"true"},"#"),t(" 链表")],-1),c=e("p",null,[e("strong",null,"链表"),t(" 是一种非常常见的数据结构，它是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的指针(Pointer)。这给了链表非常大的灵活性，可以随意的在任意位置插入，删除，拼接等等。但这也使得链表的访问较为困难，因为链表的每个节点并不是连续存储的，所以不能像数组一样，通过下标就能访问到某个节点，必须从头开始遍历，直到找到目标节点。")],-1),_=[a,c];function d(i,l){return r(),n("div",null,_)}const m=o(s,[["render",d],["__file","链表.html.vue"]]);export{m as default};
